/*
Copyright (C) 2013 Johan Ceuppens

This program is free software; you can redistribute it and/or modify it unde    r the terms of the GNU General Public License as published by the Free Softw    are Foundation; either version 2 of the License, or (at your option) any lat    er version.

This program is distributed in the hope that it will be useful, but WITHOUT     ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNES    S FOR A PARTICULAR PURPOSE. See the GNU General Public License for more deta    ils.

You should have received a copy of the GNU General Public License along with     this program; if not, write to the Free Software Foundation, Inc., 59 Templ    e Place, Suite 330, Boston, MA 02111-1307 USA
*/
//use iat -o lib=/home/foo/ambienttalk/ambienttalk-underground
object: { // spritegroup namespace

def spriteModule := lobby.lib.graphics.game;

def spritegroup := object: {


	def spritelist := object: {
		def list := [];
		def init2() {
			list.map: spriteModule.sprite.new().&init;
		};
	
		def init(n) {
			def lst[n] { spriteModule.sprite.new() };
			list := lst;
			list.map: spriteModule.sprite.new().&init;
		};

		//push sprite to front of list
		def add(o) {
			def restlist := [o, @list];
			list := restlist;
			list
		};
				
		def biter(u,fo) {
			def restlist := [];
			foreach: { |el| fo(el) } in: list;
			restlist
		};

		def remove(o) {
			def restlist := [];
			def f(u) { if: (u == o) then: { } else: { rest := [ u, restlist ] } };
			biter(o, f);
		};	

		def remove2(o) {//FIX use a range
			def restlist := [];
			foreach: { |el| 
				if: (el == o) then: {  } else: { restlist := [el, @restlist] } } in: list;
			list := restlist;
			list
		};
			
		def copy() {
			list.clone()
		};
			
		def sprites() {
			list
		};
		
		def contains(lst) {
			def count := 0;
			foreach: { |el| foreach: { |el2| if: (el2 == el) then: { count.inc(); } in: list; } in: lst; 
			if: (count >= lst.length-1) then: { true } else: { false } };
		};	
	};	

	def group := spritelist.new(10);

	def init() {
		
	};
};

def makespritegroup(n) {
	
	def group := spritegroup.new(n);

	object: {
		def init() {
			//image := img;
		};
		def get() {
			image;
		};
	};
};


};//sprite namespace

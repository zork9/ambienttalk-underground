/*
Copyright (C) 2013 Johan Ceuppens

This program is free software; you can redistribute it and/or modify it unde    r the terms of the GNU General Public License as published by the Free Softw    are Foundation; either version 2 of the License, or (at your option) any lat    er version.

This program is distributed in the hope that it will be useful, but WITHOUT     ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNES    S FOR A PARTICULAR PURPOSE. See the GNU General Public License for more deta    ils.

You should have received a copy of the GNU General Public License along with     this program; if not, write to the Free Software Foundation, Inc., 59 Templ    e Place, Suite 330, Boston, MA 02111-1307 USA
*/

//load Array.at first

def Memento := object {
	def state;

	def init(s) { state := s };
	def save(s) { state := s };
	def get() { state };
};

def Originator := object: {
	def state;
	def saveTo() { Memento.save(state) }
	def restore(m) { state := m.get() }
};

def Caretaker := object {
	def list := Array.new();

	def save(s) { list.add(s) }
	def restore() { list.remove(list.length-1); list[list.length-1]; }//FIXME index out of range

};
